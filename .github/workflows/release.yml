name: Rust Cross-Compile

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.platform.os_name }} with Rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin: go-action-${{ github.event_name == 'push' && github.ref_name || github.run_id }}-linux-x64
            suffix: tar.gz
          - os_name: Linux-aarch64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            bin: go-action-${{ github.event_name == 'push' && github.ref_name || github.run_id }}-linux-arm64
            suffix: tar.gz
          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: go-action-${{ github.event_name == 'push' && github.ref_name || github.run_id }}-windows-x64
            suffix: zip
          - os_name: Windows-arm64
            os: windows-latest
            target: aarch64-pc-windows-msvc
            bin: go-action-${{ github.event_name == 'push' && github.ref_name || github.run_id }}-windows-arm64
            suffix: zip
          - os_name: macOS-x86_64
            os: macos-latest
            target: x86_64-apple-darwin
            bin: go-action-${{ github.event_name == 'push' && github.ref_name || github.run_id }}-macos-x64
            suffix: tar.gz
          - os_name: macOS-aarch64
            os: macos-latest
            target: aarch64-apple-darwin
            bin: go-action-${{ github.event_name == 'push' && github.ref_name || github.run_id }}-macos-arm64
            suffix: tar.gz
        toolchain:
          - stable

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.platform.target }}

      - name: Setup Cache
        uses: Swatinem/rust-cache@v2

      - name: Build Binary
        run: cargo build --locked --release --target ${{ matrix.platform.target }}

      - name: Rename Binary
        run: |
          BIN_NAME=${{ matrix.platform.bin }}
          BIN_SUFFIX=${{ matrix.platform.suffix }}
          BIN_PATH=target/${{ matrix.platform.target }}/release/${{ github.repository }}
          mv "$BIN_PATH" "$BIN_NAME"

      - name: Package Binary
        run: |
          BIN_NAME=${{ matrix.platform.bin }}
          BIN_SUFFIX=${{ matrix.platform.suffix }}
          if [[ "$BIN_SUFFIX" == "zip" ]]; then
            zip -j "$BIN_NAME.$BIN_SUFFIX" "$BIN_NAME"
          else
            tar -czf "$BIN_NAME.$BIN_SUFFIX" "$BIN_NAME"
          fi

      - name: Generate SHA-256 Checksum
        run: |
          BIN_NAME=${{ matrix.platform.bin }}
          BIN_SUFFIX=${{ matrix.platform.suffix }}
          shasum -a 256 "$BIN_NAME.$BIN_SUFFIX" | cut -d ' ' -f 1 > "$BIN_NAME.$BIN_SUFFIX.sha256"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.bin }}.$(BIN_SUFFIX)
          path: ${{ matrix.platform.bin }}.$(BIN_SUFFIX)
          if-no-files-found: ignore
